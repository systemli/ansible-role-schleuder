---

- name: install schleuder-web build dependencies
  apt:
    name: "{{ __schleuder_web_build_dependencies }}"
    state: 'present'
  vars:
    __schleuder_web_build_dependencies:
      - sqlite3
      - zlibc
      - zlib1g
      - libxml2
      - libxml2-dev
      - zlib1g-dev
      - ruby
      - ruby-dev
      - git
      - gcc
      - g++
      - make
      - libsqlite3-dev

- name: ensure /var/www is present
  file:
    path: /var/www
    state: directory
    owner: root
    group: root
    mode: 0755

- name: ensure schleuder-web user exists
  user:
    name: "{{ schleuder_schleuder_web_user }}"
    home: "{{ schleuder_schleuder_web_home }}"
    shell: /bin/false

# TODO: ansible >= 2.9 provides a 'gpg_whitelist' option to the git module,
# which allows to specify a list of trusted GPG key fingerprints to compare to
# the GPG key fingerprint which signed the git tag.

- name: ensure schleuder-web gnupg home exists
  file:
    path: "{{ schleuder_schleuder_web_home }}/.gnupg"
    state: directory
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: 0700

- name: ensure schleuder-web upstream gpg signing key is present
  copy:
    src: var/www/schleuder-web/.gnupg/pubring.gpg
    dest: "{{ schleuder_schleuder_web_home }}/.gnupg/pubring.gpg"
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: 0600

- name: check if schleuder-web dir exists
  stat:
    path: "{{ schleuder_schleuder_web_path }}"
  register: __schleuder_schleuder_web_path

- name: ensure schleuder-web local checkout is pristine
  command: git reset --hard HEAD --quiet
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  changed_when: false
  when:
    - __schleuder_schleuder_web_path.stat.exists
    - not __testing

- name: ensure schleuder-web checkout of specified version
  git:
    repo: "{{ schleuder_schleuder_web_repo }}"
    dest: "{{ schleuder_schleuder_web_path }}"
    update: "{{ schleuder_schleuder_web_git_update }}"
    force: True
    verify_commit: True
    version: "{{ schleuder_web_version }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  vars:
    ansible_ssh_pipelining: True
  register: __schleuder_repo_clone

- name: ensure schleuder-web web config is latest
  template:
    src: schleuder-web/schleuder-web.yml.j2
    dest: "{{ schleuder_schleuder_web_path }}/config/schleuder-web.yml"
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: 0640

- name: ensure schleuder-web database config is latest
  template:
    src: schleuder-web/database.yml.j2
    dest: "{{ schleuder_schleuder_web_path }}/config/database.yml"
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: 0640

- name: ensure populated schleuder-web configs are backed up when running in testing
  command: "cp --preserve=all {{ schleuder_schleuder_web_path }}/config/{{ item }} {{ schleuder_schleuder_web_home }}/config"
  changed_when: false
  with_items:
    - database.yml
    - schleuder-web.yml

- name: install bundler (when repo changed)
  command: "gem install bundler"
  check_mode: no
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed

- name: install bundle (when repo changed)
  command: "/usr/local/bin/bundle install --without development --path {{ schleuder_schleuder_web_home }}/.gem"
  check_mode: no
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed

- name: check if schleuder-web systemd unit already exists
  stat:
    path: "{{ schleuder_schleuder_web_systemd_path }}"
  register: stat_schleuder_web_systemd_file

- name: generate schleuder-web's rake secret
  command: rake secret
  changed_when: False
  check_mode: no
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  vars:
    ansible_ssh_pipelining: True
  register: __rake_secret
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  when: not stat_schleuder_web_systemd_file.stat.exists

- name: register existing schleuder-web secret_key_base
  shell: "executable=/bin/bash set -o pipefail && grep SECRET_KEY_BASE {{ schleuder_schleuder_web_environment_vars_path }} | cut -d'=' -f2"
  register: schleuder_web_existing_secret_key_base_tmp
  check_mode: no
  changed_when: False
  when: stat_schleuder_web_systemd_file.stat.exists

- name: sanitize schleuder_web_existing_secret_key_base_tmp
  set_fact:
    schleuder_web_existing_secret_key_base: "{{ schleuder_web_existing_secret_key_base_tmp.stdout.split(' ')[-1] }}"
  when: stat_schleuder_web_systemd_file.stat.exists

- name: convert schleuder-web's rake secret to fact (new secret)
  set_fact:
    schleuder_schleuder_web_secret_key_base: "{{ __rake_secret.stdout }}"
  when: not stat_schleuder_web_systemd_file.stat.exists

- name: convert schleuder-web's rake secret to fact (existing secret)
  set_fact:
    schleuder_schleuder_web_secret_key_base: "{{ schleuder_web_existing_secret_key_base }}"
  when: stat_schleuder_web_systemd_file.stat.exists

- name: check if the database was already set up
  stat:
    path: "{{ schleuder_schleuder_web_path }}/{{ schleuder_web_database.production.database }}"
  register: __schleuder_schleuder_web_database

- name: prepare schleuder-web database environment (when repo changed)
  command: "bundle exec rails db:environment:set RAILS_ENV=production"
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  environment:
    SECRET_KEY_BASE: "{{ schleuder_schleuder_web_secret_key_base }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed

- name: setup schleuder-web database (when repo changed)
  command: "bundle exec rake db:setup RAILS_ENV=production"
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  environment:
    SECRET_KEY_BASE: "{{ schleuder_schleuder_web_secret_key_base }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed and not __schleuder_schleuder_web_database.stat.exists

- name: migrate schleuder-web database (when repo changed)
  command: "bundle exec rake db:migrate RAILS_ENV=production"
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  environment:
    SECRET_KEY_BASE: "{{ schleuder_schleuder_web_secret_key_base }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed and __schleuder_schleuder_web_database.stat.exists

- name: ensure schleuder-web database permissions
  file:
    path: "{{ schleuder_schleuder_web_path }}/db/production.sqlite"
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: 0600

- name: precompile schleuder-web assets (when repo changed)
  command: "bundle exec rake assets:precompile RAILS_ENV=production"
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  environment:
    SECRET_KEY_BASE: "{{ schleuder_schleuder_web_secret_key_base }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed

- name: ensure schleuder-web environment file is latest
  template:
    src: schleuder-web/default/schleuder-web.j2
    dest: "{{ schleuder_schleuder_web_environment_vars_path }}"
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: 0600
  register: schleuder_web_systemd

- name: ensure schleuder-web systemd unit file is latest
  template:
    src: schleuder-web/systemd/system/schleuder-web.service.j2
    dest: "{{ schleuder_schleuder_web_systemd_path }}"
    owner: root
    group: root
  register: schleuder_web_systemd

- name: ensure schleuder-web systemd service is restarted and enabled
  systemd:
    daemon_reload: yes
    name: schleuder-web
    enabled: yes
    state: restarted
  when: __schleuder_repo_clone.changed or schleuder_web_systemd.changed

- name: ensure schleuder-web is up and running
  command: "systemctl is-active schleuder-web"
  become: true
  changed_when: false
