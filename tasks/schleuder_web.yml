---
- name: Install schleuder-web build dependencies
  ansible.builtin.apt:
    name: "{{ item }}"
    state: "present"
  loop:
    - sqlite3
    - zlib1g
    - libxml2
    - libxml2-dev
    - zlib1g-dev
    - ruby
    - ruby-dev
    - git
    - gcc
    - g++
    - make
    - libsqlite3-dev

- name: Ensure /var/www is present
  ansible.builtin.file:
    path: /var/www
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Ensure schleuder-web user exists
  ansible.builtin.user:
    name: "{{ schleuder_schleuder_web_user }}"
    home: "{{ schleuder_schleuder_web_home }}"
    shell: /bin/false

# TODO: ansible >= 2.9 provides a 'gpg_whitelist' option to the git module,
# which allows to specify a list of trusted GPG key fingerprints to compare to
# the GPG key fingerprint which signed the git tag.

- name: Ensure schleuder-web gnupg home exists
  ansible.builtin.file:
    path: "{{ schleuder_schleuder_web_home }}/.gnupg"
    state: directory
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: "0700"

- name: Ensure schleuder-web upstream gpg signing key is present
  ansible.builtin.copy:
    src: var/www/schleuder-web/.gnupg/pubring.gpg
    dest: "{{ schleuder_schleuder_web_home }}/.gnupg/pubring.gpg"
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: "0600"

- name: Check if schleuder-web dir exists
  ansible.builtin.stat:
    path: "{{ schleuder_schleuder_web_path }}"
  register: __schleuder_schleuder_web_path

- name: Ensure schleuder-web local checkout is pristine # noqa: command-instead-of-module
  ansible.builtin.command: git reset --hard HEAD --quiet
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  changed_when: false
  when:
    - __schleuder_schleuder_web_path.stat.exists
    - not __testing | default(False)

- name: Ensure schleuder-web checkout of specified version
  ansible.builtin.git:
    repo: "{{ schleuder_schleuder_web_repo }}"
    dest: "{{ schleuder_schleuder_web_path }}"
    update: "{{ schleuder_schleuder_web_git_update }}"
    force: True
    verify_commit: True
    version: "{{ schleuder_web_version }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  vars:
    ansible_ssh_pipelining: True
  register: __schleuder_repo_clone

- name: Ensure schleuder-web web config is latest
  ansible.builtin.template:
    src: schleuder-web/schleuder-web.yml.j2
    dest: "{{ schleuder_schleuder_web_path }}/config/schleuder-web.yml"
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: "0640"

- name: Ensure schleuder-web database config is latest
  ansible.builtin.template:
    src: schleuder-web/database.yml.j2
    dest: "{{ schleuder_schleuder_web_path }}/config/database.yml"
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: "0640"

- name: Ensure populated schleuder-web configs are backed up when running in testing
  ansible.builtin.command: "cp --preserve=all {{ schleuder_schleuder_web_path }}/config/{{ item }} {{ schleuder_schleuder_web_home }}/config"
  changed_when: false
  with_items:
    - database.yml
    - schleuder-web.yml

- name: Install bundler (when repo changed)
  ansible.builtin.command: "gem install bundler -v 2.4.18"
  changed_when: false
  check_mode: no
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed # noqa: no-handler

- name: Set bundle config option to install without develop and test (repo changed)
  ansible.builtin.command: "/usr/local/bin/bundle config set --global without 'development test'"
  changed_when: false
  check_mode: no
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed # noqa: no-handler

- name: Set bundle config option for path (when repo changed)
  ansible.builtin.command: "/usr/local/bin/bundle config set --global path {{ schleuder_schleuder_web_home }}/.gem"
  changed_when: false
  check_mode: no
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed # noqa: no-handler

- name: Install bundle (when repo changed)
  ansible.builtin.command: "/usr/local/bin/bundle install --jobs {{ ansible_processor_cores }}"
  changed_when: false
  check_mode: no
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed # noqa: no-handler

- name: Check if schleuder-web systemd unit already exists
  ansible.builtin.stat:
    path: "{{ schleuder_schleuder_web_systemd_path }}"
  register: stat_schleuder_web_systemd_file

- name: Generate schleuder-web's rake secret
  ansible.builtin.command: "/usr/local/bin/bundle exec rake secret"
  changed_when: False
  check_mode: no
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  vars:
    ansible_ssh_pipelining: True
  register: __rake_secret
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  when: not stat_schleuder_web_systemd_file.stat.exists

- name: Register existing schleuder-web secret_key_base # noqa: no-free-form
  ansible.builtin.shell: "executable=/bin/bash set -o pipefail && grep SECRET_KEY_BASE {{ schleuder_schleuder_web_environment_vars_path }} | cut -d'=' -f2"
  register: schleuder_web_existing_secret_key_base_tmp
  check_mode: no
  changed_when: False
  when: stat_schleuder_web_systemd_file.stat.exists # noqa: no-handler

- name: Sanitize schleuder_web_existing_secret_key_base_tmp
  ansible.builtin.set_fact:
    schleuder_web_existing_secret_key_base: "{{ schleuder_web_existing_secret_key_base_tmp.stdout.split(' ')[-1] }}"
  when: stat_schleuder_web_systemd_file.stat.exists

- name: Convert schleuder-web's rake secret to fact (new secret)
  ansible.builtin.set_fact:
    schleuder_schleuder_web_secret_key_base: "{{ __rake_secret.stdout }}"
  when: not stat_schleuder_web_systemd_file.stat.exists

- name: Convert schleuder-web's rake secret to fact (existing secret)
  ansible.builtin.set_fact:
    schleuder_schleuder_web_secret_key_base: "{{ schleuder_web_existing_secret_key_base }}"
  when: stat_schleuder_web_systemd_file.stat.exists

- name: Check if the database was already set up
  ansible.builtin.stat:
    path: "{{ schleuder_schleuder_web_path }}/{{ schleuder_web_database.production.database }}"
  register: __schleuder_schleuder_web_database

- name: Prepare schleuder-web database environment (when repo changed)
  ansible.builtin.command: "/usr/local/bin/bundle exec rails db:environment:set RAILS_ENV=production"
  changed_when: false
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  environment:
    SECRET_KEY_BASE: "{{ schleuder_schleuder_web_secret_key_base }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed # noqa: no-handler

- name: Setup schleuder-web database (when repo changed)
  ansible.builtin.command: "/usr/local/bin/bundle exec rake db:setup RAILS_ENV=production"
  changed_when: false
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  environment:
    SECRET_KEY_BASE: "{{ schleuder_schleuder_web_secret_key_base }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed and not __schleuder_schleuder_web_database.stat.exists

- name: Migrate schleuder-web database (when repo changed)
  ansible.builtin.command: "/usr/local/bin/bundle exec rake db:migrate RAILS_ENV=production"
  changed_when: false
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  environment:
    SECRET_KEY_BASE: "{{ schleuder_schleuder_web_secret_key_base }}"
  vars:
    ansible_ssh_pipelining: True
  when: __schleuder_repo_clone.changed and __schleuder_schleuder_web_database.stat.exists

- name: Ensure schleuder-web database permissions
  ansible.builtin.file:
    path: "{{ schleuder_schleuder_web_path }}/db/production.sqlite"
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: "0600"

- name: Precompile schleuder-web assets (when repo changed)
  ansible.builtin.command: "/usr/local/bin/bundle exec rake assets:precompile RAILS_ENV=production"
  args:
    chdir: "{{ schleuder_schleuder_web_path }}"
  become: true
  become_user: "{{ schleuder_schleuder_web_user }}"
  changed_when: false
  environment:
    SECRET_KEY_BASE: "{{ schleuder_schleuder_web_secret_key_base }}"
  vars:
    ansible_ssh_pipelining: True

- name: Ensure schleuder-web environment file is latest
  ansible.builtin.template:
    src: schleuder-web/default/schleuder-web.j2
    dest: "{{ schleuder_schleuder_web_environment_vars_path }}"
    owner: "{{ schleuder_schleuder_web_user }}"
    group: "{{ schleuder_schleuder_web_user }}"
    mode: "0600"
  notify: Restart schleuder-web

- name: Ensure schleuder-web systemd unit file is latest
  ansible.builtin.template:
    src: schleuder-web/systemd/system/schleuder-web.service.j2
    dest: "{{ schleuder_schleuder_web_systemd_path }}"
    owner: root
    group: root
    mode: "0644"
  notify: Restart schleuder-web

- name: Start schleuder-web
  ansible.builtin.systemd:
    name: schleuder-web
    enabled: yes
    state: started
